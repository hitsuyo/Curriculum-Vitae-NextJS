import type { Metadata } from "next";
// import { useRouter } from 'next/navigation'
import localFont from "next/font/local";
import "./globals.css";
import React, { useState, useEffect } from "react";
import { cookies } from "next/headers";
import AppProvider from "@/app/AppProvider";
import { Toaster } from "@/components/ui/toaster"

// import Link from "next/link"

import Header from "../components/Header";
import Footer from "../components/Footer";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  initialSessionToken,
}: Readonly<{
  children: React.ReactNode;
  initialSessionToken: string;
}>) {
  // Root Layout

  const cookieStore = cookies();
  const sessionToken = cookieStore.get("sessionToken");
  // console.log('RootLayout cookieStore sessionToken', cookieStore.get('sessionToken'))

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen bg-white-500 dark:bg-black dark:text-white`}
      >
        <Header />
        {/* {children} */}
        {/* Truyền giá trị sessionToken ở trên vào initialSessionToken */}
        <AppProvider initialSessionToken={sessionToken?.value}>
          {children}
        </AppProvider>
        <Footer />

        <Toaster />
      </body>
    </html>
  );
}
